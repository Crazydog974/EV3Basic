//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Documentation.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Documentation.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&lt;H1 class=&quot;chapter&quot;&gt;Appendix - Sensors&lt;/H1&gt;
        ///&lt;P&gt;
        ///EV3 does a good job in auto-detecting many sensors, at least all sensors that came with the NXT 2.0 and EV3 kit. 
        ///Nevertheless the program needs to know how to best interpret the sensor readings for the different types and modes. 
        ///To keep the list simple, I only include the modes which I feel, make sense to use anyway.
        ///&lt;/P&gt;
        /// 
        ///&lt;PRE&gt;
        ///Type  Mode  Name            get reading with   delivers 
        ///
        ///1        0  NXT-TOUCH       ReadPercent        0=not pressed [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Appendix {
            get {
                return ResourceManager.GetString("Appendix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;H1 class=&quot;chapter&quot;&gt;EV3-Basic&lt;/H1&gt;
        ///&lt;P&gt;
        ///Programming a robot to do your bidding is great fun. The easiest way to program the Lego EV3 brick for simple tasks is the 
        ///graphical programming environment provided by Lego. 
        ///But for larger and more complex programs, this no longer works and you need some text-based programming language to write programs.
        ///There are already many different projects that have created programming environments for the EV3 to provide exactly this (LeJOS, MonoBrick, RobotC, ev3dev, and [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Manual {
            get {
                return ResourceManager.GetString("Manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;style type=&quot;text/css&quot;&gt;
        ///  H1.chapter {
        ///	margin-top: 100px;
        ///    font-family: Verdana; 
        ///  }
        ///  H3.subchapter {
        ///    font-family: Verdana; 
        ///  }
        ///  P {
        ///    font-family: Verdana; 
        ///  }
        ///  UL {
        ///    font-family: Verdana; 
        ///  }
        ///  ADDRESS {
        ///    font-family: Verdana; 
        ///	float: right;
        ///  }
        ///
        ///  H2.object {
        ///    font-family: Verdana; 
        ///	border-bottom: medium solid;
        ///  }
        ///  P.objectsummary {
        ///    font-family: Verdana; 
        ///  }
        ///  H3.operation {
        ///    font-family: Verdana;  
        ///	margin-top: 20px;
        ///	margin-bottom: 10px [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Styles {
            get {
                return ResourceManager.GetString("Styles", resourceCulture);
            }
        }
    }
}
