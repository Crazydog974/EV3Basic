Differences between Microsoft Small Basic and EV3Basic
------------------------------------------------------

While I have tried to mimic the original behaviour of Small Basic in my compiler as exactly as possible, there are some things that simply can not be done with the EV3 byte code interpreter.

 
1. Variables are typed
  
While Small Basic has just one datatype which is a unicode string into which all possible values (even arrays) are mangled, EV3Basic has 4 distinct datatypes for variables:

  Number  (a 32bit floating point)
  Text    
  Array of Numbers
  Array of Texts

Every variable has one of these types (which is determined by its first use in the program code) and can not be used to store anything else.


2. Operators and functions work on compile-type types

Arithmetic or logic operators need to be provided with either number or text parameters and deliver a result of also a defined type  (e.g. the "<" needs two numbers and delivers a text).
One exception is the "=" which will perform either a numerical or a textual comparision, depending on the compile-time type of the operands. Another exception is the "+" that will do a numerical add when provided with two numbers, but will do a text concatenation if one of the operands is text.
Similar requirements are there for function parameters, which also have a defined compile-time type. To make things easier, an automatic conversion from number to text is done if a parameter needs a text (but not the other way round).

3. Arrays 

In Small Basic arrays work like a dictionary and can use any text as an index. 
EV3Basic can not do that. Only numbers are allowed as index and only non-negative numbers without decimal places work as expected  (A[4.5] is the same as A[4], A[-4] will always deliver 0 or "")
There is no support for multi-dimensional arrays. Arrays can never be passed to functions or assigned to other arrays as a whole. Arrays are implemented as auto-growing to accommodate new elements as needed, just like in Small Basic.


4. Limitation for text

Any text variable can only hold up to 251 characters and not the full unicode range is supported, but only the codes 1 - 255  (they are just plain C-style char strings).
The same holds for all elements of text arrays.
